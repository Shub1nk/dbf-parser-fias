Структура проекта по разбору и записи данных из ФИАС в БД

|-config                               Конфиг для подключения к БД
  |-index.js                           
|-files                                Папка со всеми необходимыми файлами, нужно положить их все сюда!
  |-csv                                CSV-файлы сформированные на 1 этапе парсера:
    |--addrobj                           - по объектам адресов    
    |--house                             - по домам
  |-fiad_dbf                           DBF-файлы от ФИАС
|-node_modules
|-.gitignore
|-addr_obj.js                          Модуль для разбора DBF на CSV по объектам адресов
|-db.js                                PGHelper
|-house.js                             Модуль для разбора DBF на CSV по домам
|-index_CSVtoDB.js                     Алгоритм для разбора сформированных CSV и записи их в БД
|-index_DBFtoCSV.js                    Алгоритм для разбора DBF на CSV
|-package.json

Разбор данных из ФИАС и записи их в БД производится в 2 этапа. 
Пока это все осуществляется в ручном режиме.

1 этап. Разбор DBF на CSV

  Алгоритм читает каждый файлы из папки fias_dbf, и в зависимости от названия файла 
отсеивает его или обрабатывает, используя соответствующий модуль.

addr_obj.js  Модуль для разбора DBF на CSV по объектам адресов
house.js     Модуль для разбора DBF на CSV по домам

Модуль разбора объектов адресов просто формирует из DBF CSV такой же размерности. В файлах не так много записей.

Модуль разбора домов каждый DBF файла переводит в несколько CSV файлов, каждый из которых содержит 100к записей.
Эти типы файлов могут содержать от 500к до 3кк записей. Попытка конвертировать такой файл приводила к утечке памяти,
поэтому было принято делить на части.

2 этап. Чтение CSV файлов и запись в БД

  Этот алгоритм уже считывает файлы из 2 папок addrobj и house. Процесс чтения и записи приосходит итерационно
с лимитом в 5к записей. Каждый тип файла разбирается и заносится в соответствующую таблицу в БД

Попробовал соорудить общую функцию, которая в автомате будет разбирать DBF файлы в CSV, что-то получилось, 
но алгоритм где-то подкачал. Когда функция заканчивала работу, в фоновом режиме данные постоянно в цикле записывались,
это приводило к тому, что данные из csv файлов постоянно записывались в бд, в итоге куча дублей.

Поэтому оставил ручной запуск, но с возможностью указывать какой регион нужно загружать

Запуск 1 фазы node index_DBFtoCSV.js 72
Запуск 2 фазы node index_CSVtoDB.js 72

где, 72 - код региона.

Алгоритм в автомате подставит этот параметр в регулярные выражения, которые выберут нужные файлы

